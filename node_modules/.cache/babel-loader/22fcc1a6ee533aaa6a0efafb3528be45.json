{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n} // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\n\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription = function () {\n  function Subscription(store, parentSub) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store;\n    this.parentSub = parentSub;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  Subscription.prototype.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  Subscription.prototype.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  Subscription.prototype.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      // this.onStateChange is set by connectAdvanced.initSubscription()\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\nexport { Subscription as default };","map":{"version":3,"sources":["/home/joaohgs/Documents/ProjetosReact/instalura/node_modules/react-redux/es/utils/Subscription.js"],"names":["_classCallCheck","instance","Constructor","TypeError","CLEARED","nullListeners","notify","createListenerCollection","current","next","clear","listeners","i","length","subscribe","listener","isSubscribed","slice","push","unsubscribe","splice","indexOf","Subscription","store","parentSub","prototype","addNestedSub","trySubscribe","notifyNestedSubs","Boolean","onStateChange","tryUnsubscribe","default"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription = function () {\n  function Subscription(store, parentSub) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store;\n    this.parentSub = parentSub;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  Subscription.prototype.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  Subscription.prototype.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  Subscription.prototype.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      // this.onStateChange is set by connectAdvanced.initSubscription()\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\nexport { Subscription as default };"]},"metadata":{},"sourceType":"module"}