{"ast":null,"code":"import { List } from 'immutable';\nexport function timeline() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new List();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  function trocaFoto(lista, fotoId, callbackAtualizaPropriedades) {\n    const fotoEstadoAntigo = lista.find(foto => foto.id === fotoId);\n    const novasPropriedades = callbackAtualizaPropriedades(fotoEstadoAntigo);\n    const fotoEstadoNovo = Object.assign({}, fotoEstadoAntigo, novasPropriedades);\n    const indiceDaLista = lista.findIndex(foto => foto.id === action.fotoId);\n    return lista.set(indiceDaLista, fotoEstadoNovo);\n  }\n\n  if (action.type === 'LISTAGEM') {\n    return new List(action.fotos);\n  }\n\n  if (action.type === 'COMENTARIO') {\n    const fotoEstadoAntigo = state.find(foto => foto.id === action.fotoId);\n    const novosComentarios = fotoEstadoAntigo.comentarios.concat(action.novoComentario);\n    const fotoEstadoNovo = Object.assign({}, fotoEstadoAntigo, {\n      comentarios: novosComentarios\n    });\n    const indiceDaLista = state.findIndex(foto => foto.id === action.fotoId);\n    const novaLista = state.set(indiceDaLista, fotoEstadoNovo);\n    return novaLista;\n  }\n\n  if (action.type === 'LIKE') {\n    const fotoAchada = state.find(foto => foto.id === action.fotoId);\n    fotoAchada.likeada = !fotoAchada.likeada;\n    const liker = action.liker;\n    const possivelLiker = fotoAchada.likers.find(likerAtual => likerAtual.login === liker.login);\n\n    if (possivelLiker === undefined) {\n      fotoAchada.likers.push(liker);\n    } else {\n      const novosLikers = fotoAchada.likers.filter(likerAtual => likerAtual.login !== liker.login);\n      fotoAchada.likers = novosLikers;\n    }\n\n    return state;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/joaohgs/Documents/ProjetosReact/instalura/src/reducers/timeline.js"],"names":["List","timeline","state","action","trocaFoto","lista","fotoId","callbackAtualizaPropriedades","fotoEstadoAntigo","find","foto","id","novasPropriedades","fotoEstadoNovo","Object","assign","indiceDaLista","findIndex","set","type","fotos","novosComentarios","comentarios","concat","novoComentario","novaLista","fotoAchada","likeada","liker","possivelLiker","likers","likerAtual","login","undefined","push","novosLikers","filter"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,WAAnB;AAIA,OAAO,SAASC,QAAT,GAA0C;AAAA,MAAxBC,KAAwB,uEAAlB,IAAIF,IAAJ,EAAkB;AAAA,MAAPG,MAAO;;AAE7C,WAASC,SAAT,CAAmBC,KAAnB,EAAyBC,MAAzB,EAAgCC,4BAAhC,EAA6D;AAEzD,UAAMC,gBAAgB,GAAGH,KAAK,CAACI,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAA/B,CAAzB;AACA,UAAMM,iBAAiB,GAAGL,4BAA4B,CAACC,gBAAD,CAAtD;AACA,UAAMK,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,gBAAjB,EAAkCI,iBAAlC,CAAvB;AACA,UAAMI,aAAa,GAAGX,KAAK,CAACY,SAAN,CAAgBP,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,MAA3C,CAAtB;AACA,WAAOD,KAAK,CAACa,GAAN,CAAUF,aAAV,EAAwBH,cAAxB,CAAP;AACH;;AAED,MAAGV,MAAM,CAACgB,IAAP,KAAgB,UAAnB,EAA8B;AAC5B,WAAO,IAAInB,IAAJ,CAASG,MAAM,CAACiB,KAAhB,CAAP;AACD;;AAED,MAAGjB,MAAM,CAACgB,IAAP,KAAgB,YAAnB,EAAgC;AAC5B,UAAMX,gBAAgB,GAAGN,KAAK,CAACO,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,MAAtC,CAAzB;AACA,UAAMe,gBAAgB,GAAGb,gBAAgB,CAACc,WAAjB,CAA6BC,MAA7B,CAAoCpB,MAAM,CAACqB,cAA3C,CAAzB;AACA,UAAMX,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,gBAAjB,EAAkC;AAACc,MAAAA,WAAW,EAACD;AAAb,KAAlC,CAAvB;AACA,UAAML,aAAa,GAAGd,KAAK,CAACe,SAAN,CAAgBP,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,MAA3C,CAAtB;AACA,UAAMmB,SAAS,GAAGvB,KAAK,CAACgB,GAAN,CAAUF,aAAV,EAAwBH,cAAxB,CAAlB;AACA,WAAOY,SAAP;AACH;;AAED,MAAGtB,MAAM,CAACgB,IAAP,KAAgB,MAAnB,EAA0B;AACpB,UAAMO,UAAU,GAAGxB,KAAK,CAACO,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,MAAtC,CAAnB;AACAoB,IAAAA,UAAU,CAACC,OAAX,GAAqB,CAACD,UAAU,CAACC,OAAjC;AAEA,UAAMC,KAAK,GAAGzB,MAAM,CAACyB,KAArB;AACA,UAAMC,aAAa,GAAGH,UAAU,CAACI,MAAX,CAAkBrB,IAAlB,CAAuBsB,UAAU,IAAIA,UAAU,CAACC,KAAX,KAAqBJ,KAAK,CAACI,KAAhE,CAAtB;;AAEA,QAAGH,aAAa,KAAKI,SAArB,EAA+B;AAC3BP,MAAAA,UAAU,CAACI,MAAX,CAAkBI,IAAlB,CAAuBN,KAAvB;AACH,KAFD,MAEO;AACH,YAAMO,WAAW,GAAGT,UAAU,CAACI,MAAX,CAAkBM,MAAlB,CAAyBL,UAAU,IAAIA,UAAU,CAACC,KAAX,KAAqBJ,KAAK,CAACI,KAAlE,CAApB;AACAN,MAAAA,UAAU,CAACI,MAAX,GAAoBK,WAApB;AACH;;AAED,WAAOjC,KAAP;AACL;;AAED,SAAOA,KAAP;AACD","sourcesContent":["import {List} from 'immutable';\n\n\n\nexport function timeline(state=new List(),action){\n\n    function trocaFoto(lista,fotoId,callbackAtualizaPropriedades){\n\n        const fotoEstadoAntigo = lista.find(foto => foto.id === fotoId);\n        const novasPropriedades = callbackAtualizaPropriedades(fotoEstadoAntigo);\n        const fotoEstadoNovo = Object.assign({},fotoEstadoAntigo,novasPropriedades);\n        const indiceDaLista = lista.findIndex(foto => foto.id === action.fotoId);\n        return lista.set(indiceDaLista,fotoEstadoNovo);\n    }\n\n    if(action.type === 'LISTAGEM'){  \n      return new List(action.fotos);\n    }\n  \n    if(action.type === 'COMENTARIO'){\n        const fotoEstadoAntigo = state.find(foto => foto.id === action.fotoId);        \n        const novosComentarios = fotoEstadoAntigo.comentarios.concat(action.novoComentario); \n        const fotoEstadoNovo = Object.assign({},fotoEstadoAntigo,{comentarios:novosComentarios});\n        const indiceDaLista = state.findIndex(foto => foto.id === action.fotoId)\n        const novaLista = state.set(indiceDaLista,fotoEstadoNovo);\n        return novaLista;\n    }\n  \n    if(action.type === 'LIKE'){\n          const fotoAchada = state.find(foto => foto.id === action.fotoId);\n          fotoAchada.likeada = !fotoAchada.likeada;\n          \n          const liker = action.liker;\n          const possivelLiker = fotoAchada.likers.find(likerAtual => likerAtual.login === liker.login);\n  \n          if(possivelLiker === undefined){\n              fotoAchada.likers.push(liker);\n          } else {\n              const novosLikers = fotoAchada.likers.filter(likerAtual => likerAtual.login !== liker.login);\n              fotoAchada.likers = novosLikers;\n          }\n  \n          return state;\n    }\n  \n    return state;\n  }"]},"metadata":{},"sourceType":"module"}